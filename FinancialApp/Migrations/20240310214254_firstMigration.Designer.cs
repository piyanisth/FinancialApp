// <auto-generated />
using System;
using FinancialApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinancialApp.Migrations
{
    [DbContext(typeof(MyDatabaseContext))]
    [Migration("20240310214254_firstMigration")]
    partial class firstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FinancialApp.Models.Account", b =>
                {
                    b.Property<Guid>("UUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UUID");

                    b.HasIndex("CustomerId");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            UUID = new Guid("d791cb4e-9180-4027-9ff9-32f7277e107d"),
                            AccountName = "Halit's TRY Account",
                            Currency = "TRY",
                            CustomerId = new Guid("00000000-0000-0000-0000-000000000001")
                        },
                        new
                        {
                            UUID = new Guid("906e4f64-6fec-4d38-8ba9-3801e9365790"),
                            AccountName = "Haluk's Bitcoin Account",
                            Currency = "BTC",
                            CustomerId = new Guid("00000000-0000-0000-0000-000000000002")
                        });
                });

            modelBuilder.Entity("FinancialApp.Models.Customer", b =>
                {
                    b.Property<Guid>("UUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IDNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UUID");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            UUID = new Guid("00000000-0000-0000-0000-000000000001"),
                            IDNumber = "123456789",
                            Name = "Halit",
                            Surname = "Salihoglu"
                        },
                        new
                        {
                            UUID = new Guid("00000000-0000-0000-0000-000000000002"),
                            IDNumber = "987654321",
                            Name = "Haluk",
                            Surname = "Salihoglu"
                        });
                });

            modelBuilder.Entity("FinancialApp.Models.Account", b =>
                {
                    b.HasOne("FinancialApp.Models.Customer", "Customer")
                        .WithMany("Accounts")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("FinancialApp.Models.Customer", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
